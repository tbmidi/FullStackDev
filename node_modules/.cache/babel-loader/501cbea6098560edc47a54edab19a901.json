{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container-fluid mb-5 mt-4\"\n};\nconst _hoisted_2 = {\n  class: \"row\"\n};\nconst _hoisted_3 = {\n  class: \"card h-100 border-0 rounded shadow\"\n};\nconst _hoisted_4 = {\n  class: \"card-body text-center\"\n};\nconst _hoisted_5 = [\"src\"];\n\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"hr\", {\n  style: {\n    \"border-top\": \"1px solid rgb(0 0 0)\",\n    \"border-radius\": \".5rem\"\n  }\n}, null, -1);\n\nconst _hoisted_7 = {\n  class: \"fw-bold text-dark\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.categories, category => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: category.id,\n      class: \"col-md-2 col-4 mb-3\"\n    }, [_createVNode(_component_router_link, {\n      to: {\n        name: 'detail_category',\n        params: {\n          slug: category.slug\n        }\n      },\n      class: \"text-decoration-none\"\n    }, {\n      default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"img\", {\n        src: category.image,\n        style: {\n          \"width\": \"100px\"\n        }\n      }, null, 8, _hoisted_5), _hoisted_6, _createElementVNode(\"p\", _hoisted_7, _toDisplayString(category.name), 1)])])]),\n      _: 2\n    }, 1032, [\"to\"])]);\n  }), 128))])]);\n}","map":{"version":3,"mappings":";;AACOA,OAAK,EAAC;;;AACJA,OAAK,EAAC;;;AAGMA,OAAK,EAAC;;;AACFA,OAAK,EAAC;;;;gCAEPC,oBAAiE,IAAjE,EAAiE;AAA7DC,OAA4D,EAA5D;AAAA;AAAA;AAAA;AAA6D,CAAjE,EAAgE,IAAhE,EAAgE,EAAhE;;;AACGF,OAAK,EAAC;;;;;uBAR/BG,oBAcM,KAdN,cAcM,CAbJF,oBAYM,KAZN,cAYM,oBAXFE,oBAUMC,SAVN,EAUM,IAVN,EAUMC,YAVkBC,iBAUlB,EAVMC,QAAsB,IAAd;yBAApBJ,oBAUM,KAVN,EAUM;AAV+BK,SAAG,EAAED,QAAQ,CAACE,EAU7C;AAViDT,WAAK,EAAC;AAUvD,KAVN,GACIU,aAQcC,sBARd,EAQc;AARAC,QAAE;AAAAC;AAAAC;AAAAC,gBAA0CR,QAAQ,CAACQ;AAAnD;AAAA,OAQF;AAR6Df,WAAK,EAAC;AAQnE,KARd;wBACI,MAMM,CANNC,oBAMM,KANN,cAMM,CALFA,oBAIM,KAJN,cAIM,CAHFA,oBAAiD,KAAjD,EAAiD;AAA3Ce,WAAG,EAAET,QAAQ,CAACU,KAA6B;AAAtBf,aAAqB,EAArB;AAAA;AAAA;AAAsB,OAAjD,sBAGE,EAFFgB,UAEE,EADFjB,oBAAoD,GAApD,cAAoDkB,iBAApBZ,QAAQ,CAACM,IAAW,CAApD,EAA6C,CAA7C,CACE,CAJN,CAKE,CANN,CAMM;;KAPV,gBADJ;GAUM,CAVN,MAWE,EAZN,CAaI,CAdN","names":["class","_createElementVNode","style","_createElementBlock","_Fragment","_renderList","$setup","category","key","id","_createVNode","_component_router_link","to","name","params","slug","src","image","_hoisted_6","_toDisplayString"],"sourceRoot":"","sources":["/Users/benmehidilarbi/Desktop/online-shop-main/src/views/category/Index.vue"],"sourcesContent":["<template>\n  <div class=\"container-fluid mb-5 mt-4\">\n    <div class=\"row\">\n        <div v-for=\"category in categories\" :key=\"category.id\" class=\"col-md-2 col-4 mb-3\">\n            <router-link :to=\"{name: 'detail_category', params:{slug: category.slug}}\" class=\"text-decoration-none\">\n                <div class=\"card h-100 border-0 rounded shadow\">\n                    <div class=\"card-body text-center\">\n                        <img :src=\"category.image\" style=\"width: 100px;\">\n                        <hr style=\"border-top: 1px solid rgb(0 0 0);border-radius:.5rem\">\n                        <p class=\"fw-bold text-dark\">{{ category.name }}</p>\n                    </div>\n                </div>\n            </router-link>\n        </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { computed, onMounted } from 'vue'\nimport { useStore } from 'vuex'\n\n    export default {\n        setup() {            \n            const store = useStore()\n            \n            onMounted(() => {\n                store.dispatch('category/getCategories')\n            })\n            \n            const categories = computed(() => {\n                return store.state.category.categories\n            })\n\n            return {                \n                categories\n            }\n        }\n    }\n</script>"]},"metadata":{},"sourceType":"module"}