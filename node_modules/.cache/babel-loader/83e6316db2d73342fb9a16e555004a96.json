{"ast":null,"code":"import Api from \"../../api/Api\";\nimport router from '../../router';\nconst auth = {\n  namespaced: true,\n  state: {\n    token: localStorage.getItem('token') || '',\n    user: JSON.parse(localStorage.getItem('user')) || {}\n  },\n  mutations: {\n    AUTH_SUCCESS(state, token, user) {\n      state.token = token;\n      state.user = user;\n    },\n\n    GET_USER(state, user) {\n      state.user = user;\n    },\n\n    AUTH_LOGOUT(state) {\n      state.token = '';\n      state.user = {};\n    }\n\n  },\n  actions: {\n    register({\n      commit\n    }, user) {\n      return new Promise((resolve, reject) => {\n        Api.post('/register', {\n          name: user.name,\n          email: user.email,\n          password: user.password,\n          password_confirmation: user.password_confirmation\n        }).then(response => {\n          const token = response.data.token;\n          const user = response.data.user;\n          localStorage.setItem('token', token);\n          localStorage.setItem('user', JSON.stringify(user));\n          Api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n          commit('AUTH_SUCCESS', token, user);\n          commit('GET_USER', user);\n          Api.get('/cart').then(response => {\n            commit('cart/GET_CART', response.data.cart, {\n              root: true\n            });\n          });\n          Api.get('/cart/total').then(response => {\n            commit('cart/TOTAL_CART', response.data.total, {\n              root: true\n            });\n          });\n          resolve(response);\n        }).catch(error => {\n          localStorage.removeItem('token');\n          reject(error.response.data);\n        });\n      });\n    },\n\n    getUser({\n      commit\n    }) {\n      const token = localStorage.getItem('token');\n      Api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      Api.get('/user').then(response => {\n        commit('GET_USER', response.data.user);\n      }).catch(error => {\n        if (error.response.status === 401) {\n          commit('AUTH_LOGOUT');\n          localStorage.removeItem('token');\n          localStorage.removeItem('user');\n          commit('cart/GET_CART', 0, {\n            root: true\n          });\n          commit('cart/TOTAL_CART', 0, {\n            root: true\n          });\n          delete Api.defaults.headers.common['Authorization'];\n          router.push({\n            name: 'home'\n          });\n        } else {\n          console.log(error.response.data);\n        }\n      });\n    },\n\n    logout({\n      commit\n    }) {\n      return new Promise(resolve => {\n        commit('AUTH_LOGOUT');\n        localStorage.removeItem('token');\n        localStorage.removeItem('user');\n        commit('cart/GET_CART', 0, {\n          root: true\n        });\n        commit('cart/TOTAL_CART', 0, {\n          root: true\n        });\n        delete Api.defaults.headers.common['Authorization'];\n        resolve();\n      });\n    },\n\n    login({\n      commit\n    }, user) {\n      return new Promise((resolve, reject) => {\n        Api.post('/login', {\n          email: user.email,\n          password: user.password\n        }).then(response => {\n          const token = response.data.token;\n          const user = response.data.user;\n          localStorage.setItem('token', token);\n          localStorage.setItem('user', JSON.stringify(user));\n          Api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n          commit('AUTH_SUCCESS', token, user);\n          commit('GET_USER', user);\n          Api.get('/cart').then(response => {\n            commit('cart/GET_CART', response.data.cart, {\n              root: true\n            });\n          });\n          Api.get('/cart/total').then(response => {\n            commit('cart/TOTAL_CART', response.data.total, {\n              root: true\n            });\n          });\n          resolve(response);\n        }).catch(error => {\n          localStorage.removeItem('token');\n          reject(error.response.data);\n        });\n      });\n    }\n\n  },\n  getters: {\n    currentUser(state) {\n      return state.user;\n    },\n\n    isLoggedIn(state) {\n      return state.token;\n    }\n\n  }\n};\nexport default auth;","map":{"version":3,"sources":["/Users/benmehidilarbi/Desktop/online-shop-main/src/store/module/auth.js"],"names":["Api","router","auth","namespaced","state","token","localStorage","getItem","user","JSON","parse","mutations","AUTH_SUCCESS","GET_USER","AUTH_LOGOUT","actions","register","commit","Promise","resolve","reject","post","name","email","password","password_confirmation","then","response","data","setItem","stringify","defaults","headers","common","get","cart","root","total","catch","error","removeItem","getUser","status","push","console","log","logout","login","getters","currentUser","isLoggedIn"],"mappings":"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","sourcesContent":["import Api from \"../../api/Api\";\nimport router from '../../router'\n\nconst auth = {\n    namespaced: true,\n\n    state: {\n        token: localStorage.getItem('token') || '',\n        user: JSON.parse(localStorage.getItem('user')) || {},\n    },\n\n    mutations: {\n        AUTH_SUCCESS(state, token, user) {\n            state.token = token\n            state.user = user\n        },\n        GET_USER(state, user) {\n            state.user = user\n        },\n        AUTH_LOGOUT(state) {\n            state.token = ''\n            state.user = {}\n        }\n    },\n\n    actions: {\n        register({ commit }, user) {\n            return new Promise((resolve, reject) => {\n                Api.post('/register', {\n                    name: user.name,\n                    email: user.email,\n                    password: user.password,\n                    password_confirmation: user.password_confirmation\n                })\n                    .then(response => {\n                        const token = response.data.token\n                        const user = response.data.user\n\n                        localStorage.setItem('token', token)\n                        localStorage.setItem('user', JSON.stringify(user))\n\n                        Api.defaults.headers.common['Authorization'] = `Bearer ${token}`\n\n                        commit('AUTH_SUCCESS', token, user)\n\n                        commit('GET_USER', user)\n\n                        Api.get('/cart')\n                            .then(response => {\n                                commit('cart/GET_CART', response.data.cart, { root: true })\n                            })\n\n                        Api.get('/cart/total')\n                            .then(response => {\n                                commit('cart/TOTAL_CART', response.data.total, { root: true })\n                            })\n\n                        resolve(response);\n                    }).catch(error => {\n                        localStorage.removeItem('token')\n\n                        reject(error.response.data)\n                    })\n            });\n        },\n        getUser({ commit }) {\n            const token = localStorage.getItem('token')\n\n            Api.defaults.headers.common['Authorization'] = `Bearer ${token}`\n            Api.get('/user')\n                .then(response => {\n                    commit('GET_USER', response.data.user)\n                })\n                .catch(error => {\n                    if (error.response.status === 401) {\n                        commit('AUTH_LOGOUT')\n\n                        localStorage.removeItem('token')\n                        localStorage.removeItem('user')\n\n                        commit('cart/GET_CART', 0, { root: true })\n                        commit('cart/TOTAL_CART', 0, { root: true })\n\n                        delete Api.defaults.headers.common['Authorization']\n\n                        router.push({ name: 'home' })\n                    } else {\n                        console.log(error.response.data)\n                    }\n                })\n        },\n        logout({ commit }) {\n            return new Promise((resolve) => {\n                commit('AUTH_LOGOUT')\n\n                localStorage.removeItem('token')\n                localStorage.removeItem('user')\n\n                commit('cart/GET_CART', 0, { root: true })\n                commit('cart/TOTAL_CART', 0, { root: true })\n\n                delete Api.defaults.headers.common['Authorization']\n\n                resolve()\n            })\n        },\n        login({ commit }, user) {\n            return new Promise((resolve, reject) => {\n                Api.post('/login', {\n                    email: user.email,\n                    password: user.password,\n                })\n                    .then(response => {\n                        const token = response.data.token\n                        const user = response.data.user\n\n                        localStorage.setItem('token', token)\n                        localStorage.setItem('user', JSON.stringify(user))\n\n                        Api.defaults.headers.common['Authorization'] = `Bearer ${token}`\n\n                        commit('AUTH_SUCCESS', token, user)\n\n                        commit('GET_USER', user)\n\n                        Api.get('/cart')\n                            .then(response => {\n                                commit('cart/GET_CART', response.data.cart, { root: true })\n                            })\n\n                        Api.get('/cart/total')\n                            .then(response => {\n                                commit('cart/TOTAL_CART', response.data.total, { root: true })\n                            })\n\n                        resolve(response)\n                    }).catch(error => {\n                        localStorage.removeItem('token')\n\n                        reject(error.response.data)\n                    })\n            })\n        },\n    },\n\n    getters: {\n        currentUser(state) {\n            return state.user\n        },\n\n        isLoggedIn(state) {\n            return state.token\n        },\n    }\n}\n\nexport default auth"]},"metadata":{},"sourceType":"module"}