{"ast":null,"code":"import CustomerMenu from '../../components/CustomerMenu';\nimport { computed, onMounted } from 'vue';\nimport { useStore } from 'vuex';\nimport { useRoute, useRouter } from 'vue-router';\nexport default {\n  components: {\n    CustomerMenu\n  },\n\n  setup() {\n    const store = useStore();\n    const route = useRoute();\n    const router = useRouter();\n    onMounted(() => {\n      store.dispatch('order/detailOrder', route.params.snap_token);\n    });\n    const detailOrder = computed(() => {\n      return store.getters['order/detailOrder'];\n    });\n    const productInOrder = computed(() => {\n      return store.getters['order/productInOrder'];\n    });\n\n    const payment = snap_token => {\n      window.snap.pay(snap_token, {\n        onSuccess: function () {\n          router.push({\n            name: 'detail_order',\n            params: {\n              snap_token: snap_token\n            }\n          });\n        },\n        onPending: function () {\n          router.push({\n            name: 'detail_order',\n            params: {\n              snap_token: snap_token\n            }\n          });\n        },\n        onError: function () {\n          router.push({\n            name: 'detail_order',\n            params: {\n              snap_token: snap_token\n            }\n          });\n        }\n      });\n    };\n\n    return {\n      store,\n      route,\n      router,\n      detailOrder,\n      productInOrder,\n      payment\n    };\n  }\n\n};","map":{"version":3,"mappings":"AA4HA,OAAOA,YAAP,MAAyB,+BAAzB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,KAApC;AACA,SAASC,QAAT,QAAyB,MAAzB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,YAApC;AAEI,eAAe;AACXC,YAAU,EAAE;AACRN;AADQ,GADD;;AAKXO,OAAK,GAAG;AACJ,UAAMC,KAAI,GAAIL,QAAQ,EAAtB;AAEA,UAAMM,KAAI,GAAKL,QAAQ,EAAvB;AACA,UAAMM,MAAK,GAAIL,SAAS,EAAxB;AAEAH,aAAS,CAAC,MAAM;AACZM,WAAK,CAACG,QAAN,CAAe,mBAAf,EAAoCF,KAAK,CAACG,MAAN,CAAaC,UAAjD;AACH,KAFQ,CAAT;AAIA,UAAMC,WAAU,GAAIb,QAAQ,CAAC,MAAM;AAC/B,aAAOO,KAAK,CAACO,OAAN,CAAc,mBAAd,CAAP;AACH,KAF2B,CAA5B;AAIA,UAAMC,cAAa,GAAIf,QAAQ,CAAC,MAAM;AAClC,aAAOO,KAAK,CAACO,OAAN,CAAc,sBAAd,CAAP;AACH,KAF8B,CAA/B;;AAIA,UAAME,OAAM,GAAKJ,UAAD,IAAgB;AAC5BK,YAAM,CAACC,IAAP,CAAYC,GAAZ,CAAgBP,UAAhB,EAA4B;AACxBQ,iBAAS,EAAE,YAAY;AACnBX,gBAAM,CAACY,IAAP,CAAY;AAACC,gBAAI,EAAE,cAAP;AAAuBX,kBAAM,EAAC;AAACC,wBAAU,EAAEA;AAAb;AAA9B,WAAZ;AACH,SAHuB;AAIxBW,iBAAS,EAAE,YAAY;AACnBd,gBAAM,CAACY,IAAP,CAAY;AAACC,gBAAI,EAAE,cAAP;AAAuBX,kBAAM,EAAC;AAACC,wBAAU,EAAEA;AAAb;AAA9B,WAAZ;AACH,SANuB;AAOxBY,eAAO,EAAE,YAAY;AACjBf,gBAAM,CAACY,IAAP,CAAY;AAACC,gBAAI,EAAE,cAAP;AAAuBX,kBAAM,EAAC;AAACC,wBAAU,EAAEA;AAAb;AAA9B,WAAZ;AACJ;AATwB,OAA5B;AAWJ,KAZA;;AAcA,WAAO;AACHL,WADG;AAEHC,WAFG;AAGHC,YAHG;AAIHI,iBAJG;AAKHE,oBALG;AAMHC;AANG,KAAP;AAQJ;;AA7CW,CAAf","names":["CustomerMenu","computed","onMounted","useStore","useRoute","useRouter","components","setup","store","route","router","dispatch","params","snap_token","detailOrder","getters","productInOrder","payment","window","snap","pay","onSuccess","push","name","onPending","onError"],"sourceRoot":"","sources":["/Users/benmehidilarbi/Desktop/online-shop-main/src/views/order/Show.vue"],"sourcesContent":["<template>\n    <div class=\"container-fluid mb-5 mt-4\">\n        <div class=\"row\">\n            <div class=\"col-md-3 mb-4\">\n                <CustomerMenu />\n            </div>\n            <div class=\"col-md-9 mb-4\">\n                <div class=\"card border-0 rounded shadow\">\n                    <div class=\"card-body\">\n                        <h5 class=\"fw-bold\"><i class=\"fas fa-file\"></i> Detail Invoice</h5>                    \n                        <hr>\n                        <table class=\"table table-bordered\">\n                            <tbody>\n                                <tr>\n                                <td style=\"width: 25%\">\n                                    No. Invoice\n                                </td>\n                                <td style=\"width: 1%\">:</td>\n                                <td>\n                                    {{ detailOrder.invoice }}\n                                </td>\n                                </tr>\n                                <tr>\n                                    <td>\n                                        Nama Lengkap\n                                    </td>\n                                    <td>:</td>\n                                    <td>\n                                        {{ detailOrder.name }}\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>\n                                        No. Telp / WA\n                                    </td>\n                                    <td>:</td>\n                                    <td>\n                                        {{ detailOrder.phone }}\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>\n                                        Kurir / Service / Cost\n                                    </td>\n                                    <td>:</td>\n                                    <td>\n                                        {{ detailOrder.courier?.toUpperCase() || '' }} / {{ detailOrder.service }} / Rp.\n                                        {{ moneyFormat(detailOrder.cost_courier) }}\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>\n                                        Complete address\n                                    </td>\n                                    <td>:</td>\n                                    <td>\n                                        {{ detailOrder.address }}\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>\n                                        Total Purchase\n                                    </td>\n                                    <td>:</td>\n                                    <td>\n                                        Rp. {{ moneyFormat(detailOrder.grand_total) }}\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>\n                                        Status\n                                    </td>\n                                    <td>:</td>\n                                    <td>\n                                        <button @click=\"payment(detailOrder.snap_token)\"\n                                            v-if=\"detailOrder.status == 'pending'\" class=\"btn btn-primary\">Bayar Sekarang</button>\n                                        <button v-else-if=\"detailOrder.status == 'success'\"\n                                            class=\"btn btn-success\">{{ detailOrder.status.replace(/(^\\w|\\s\\w)/g, m => m.toUpperCase()) }}</button>\n                                        <button v-else-if=\"detailOrder.status == 'expired'\"\n                                            class=\"btn btn-warning\">{{ detailOrder.status.replace(/(^\\w|\\s\\w)/g, m => m.toUpperCase()) }}</button>\n                                        <button v-else-if=\"detailOrder.status == 'failed'\"\n                                            class=\"btn btn-danger\">{{ detailOrder.status.replace(/(^\\w|\\s\\w)/g, m => m.toUpperCase()) }}</button>\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>                        \n                    </div>\n                </div>\n                <div class=\"card border-0 rounded shadow mt-4\">\n                    <div class=\"card-body\">\n                        <h5><i class=\"fa fa-shopping-cart\"></i> Detail Order</h5>\n                        <hr style=\"border-top: 3px solid rgb(154 155 156);border-radius:.5rem\">                        \n                        <table class=\"table\">\n                            <tbody>\n                                <tr v-for=\"product in productInOrder\" :key=\"product.id\">\n                                    <td class=\"b-none\" width=\"25%\">\n                                        <div class=\"wrapper-image-cart\">\n                                            <img :src=\"product.image\" style=\"width: 100%;border-radius: .5rem\">\n                                        </div>\n                                    </td>\n                                    <td class=\"b-none\" width=\"50%\">\n                                        <h5><b>{{ product.product_name }}</b></h5>\n                                        <table class=\"table-borderless\" style=\"font-size: 14px\">\n                                            <tr>\n                                                <td style=\"padding: .20rem\">Qty</td>\n                                                <td style=\"padding: .20rem\">:</td>\n                                                <td style=\"padding: .20rem\"><b>{{ product.qty }}</b></td>\n                                            </tr>\n                                        </table>\n                                    </td>\n                                    <td class=\"b-none text-right\">\n                                        <p class=\"m-0 fw-bold\">Rp. {{ moneyFormat(product.price) }}</p>                                        \n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport CustomerMenu from '../../components/CustomerMenu'\nimport { computed, onMounted } from 'vue'\nimport { useStore } from 'vuex'\nimport { useRoute, useRouter } from 'vue-router'\n\n    export default {\n        components: {            \n            CustomerMenu\n        },\n\n        setup() {            \n            const store = useStore()\n            \n            const route  = useRoute()\n            const router = useRouter()\n            \n            onMounted(() => {                \n                store.dispatch('order/detailOrder', route.params.snap_token)\n            })\n            \n            const detailOrder = computed(() => {                \n                return store.getters['order/detailOrder']            \n            })\n            \n            const productInOrder = computed(() => {                \n                return store.getters['order/productInOrder']\n            })\n            \n            const payment = (snap_token) => {\n                window.snap.pay(snap_token, {\n                    onSuccess: function () {\n                        router.push({name: 'detail_order', params:{snap_token: snap_token}})  \n                    },\n                    onPending: function () {\n                        router.push({name: 'detail_order', params:{snap_token: snap_token}})\n                    },\n                    onError: function () {\n                        router.push({name: 'detail_order', params:{snap_token: snap_token}})  \n                    }\n                })\n            }\n\n            return {\n                store,\n                route,\n                router,\n                detailOrder,\n                productInOrder,\n                payment\n            }\n        }\n    }\n</script>"]},"metadata":{},"sourceType":"module"}